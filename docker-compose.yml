services:
  postgres:
    image: postgres:latest
    container_name: user_service_db
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-user_service}
    ports:
      - "${DB_PORT:-6003}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-user_service}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - user_service_network

  app:
    build:
      context: .
      target: production
    container_name: user_service_app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USERNAME:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-user_service}
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - user_service_network

  redis:
    image: redis:latest
    container_name: user_service_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    ports:
      - "6004:6379"
    volumes:
      - redis_data:/data
    networks:
      - user_service_network

volumes:
  postgres_data:
  redis_data:
networks:
  user_service_network:
    driver: bridge 